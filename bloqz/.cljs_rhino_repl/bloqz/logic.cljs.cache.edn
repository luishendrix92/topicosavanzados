{:rename-macros {}, :renames {}, :use-macros {intersection clojure.set}, :excludes #{}, :name bloqz.logic, :imports nil, :requires {clojure.set clojure.set}, :uses {intersection clojure.set}, :defs {occupied-cells {:protocol-inline nil, :meta {:file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :line 9, :column 7, :end-line 9, :end-column 21, :arglists (quote ([block]))}, :name bloqz.logic/occupied-cells, :variadic false, :file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :end-column 21, :method-params ([block]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([block]))}, can-move? {:protocol-inline nil, :meta {:file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :line 18, :column 7, :end-line 18, :end-column 16, :arglists (quote ([block destination blocks]))}, :name bloqz.logic/can-move?, :variadic false, :file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :end-column 16, :method-params ([block destination blocks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([block destination blocks]))}, winning-position {:name bloqz.logic/winning-position, :file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :line 4, :column 1, :end-line 4, :end-column 22, :meta {:file "/home/luisdevlopez/Documentos/repos/topicosavanzadosITT/bloqz/src/bloqz/logic.cljs", :line 4, :column 6, :end-line 4, :end-column 22}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :horizontal :vertical :type :x}, :order [:type :horizontal :vertical :x :y]}, :doc nil}